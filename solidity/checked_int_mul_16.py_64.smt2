; benchmark generated from python API
(set-info :status unknown)
(declare-fun Y () (_ BitVec 64))
(declare-fun X () (_ BitVec 64))
(assert
 (let ((?x74 (concat (ite (bvslt Y (_ bv0 64)) (_ bv6277101735386680763835789423207666416102355444464034512895 192) (_ bv0 192)) Y)))
 (let (($x27 (= ?x74 (_ bv0 256))))
 (let ((?x76 (concat (ite (bvslt X (_ bv0 64)) (_ bv6277101735386680763835789423207666416102355444464034512895 192) (_ bv0 192)) X)))
 (let ((?x26 (ite (bvsgt ?x74 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x18 (ite (bvslt ?x76 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x138 (bvand (bvand ?x18 ?x26) (ite (bvslt ?x76 (ite $x27 (_ bv0 256) (bvsdiv (_ bv115792089237316195423570985008687907853269984665640564039448360635876274864128 256) ?x74))) (_ bv1 256) (_ bv0 256)))))
 (let ((?x132 (ite (bvslt ?x74 (ite (= ?x76 (_ bv0 256)) (_ bv0 256) (bvsdiv (_ bv115792089237316195423570985008687907853269984665640564039448360635876274864128 256) ?x76))) (_ bv1 256) (_ bv0 256))))
 (let ((?x14 (ite (bvslt ?x74 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x70 (ite (bvsgt ?x76 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x101 (bvand (bvand ?x70 ?x14) ?x132)))
 (let (($x109 (or (and (distinct ?x101 (_ bv0 256)) true) (and (distinct ?x138 (_ bv0 256)) true))))
 (let (($x143 (bvsmul_noudfl X Y)))
 (let (($x113 (not $x143)))
 (and (distinct $x113 $x109) true)))))))))))))))
(check-sat)
