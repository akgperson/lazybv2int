; benchmark generated from python API
(set-info :status unknown)
(declare-fun Y () (_ BitVec 8))
(declare-fun X () (_ BitVec 8))
(assert
 (let ((?x19 (concat (ite (bvslt Y (_ bv0 8)) (_ bv452312848583266388373324160190187140051835877600158453279131187530910662655 248) (_ bv0 248)) Y)))
 (let (($x29 (= ?x19 (_ bv0 256))))
 (let ((?x16 (concat (ite (bvslt X (_ bv0 8)) (_ bv452312848583266388373324160190187140051835877600158453279131187530910662655 248) (_ bv0 248)) X)))
 (let ((?x27 (ite (bvsgt ?x19 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x45 (ite (bvslt ?x16 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x51 (bvand (bvand ?x45 ?x27) (ite (bvslt ?x16 (ite $x29 (_ bv0 256) (bvsdiv (_ bv115792089237316195423570985008687907853269984665640564039457584007913129639808 256) ?x19))) (_ bv1 256) (_ bv0 256)))))
 (let ((?x42 (ite (bvslt ?x19 (ite (= ?x16 (_ bv0 256)) (_ bv0 256) (bvsdiv (_ bv115792089237316195423570985008687907853269984665640564039457584007913129639808 256) ?x16))) (_ bv1 256) (_ bv0 256))))
 (let ((?x36 (ite (bvslt ?x19 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x25 (ite (bvsgt ?x16 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x43 (bvand (bvand ?x25 ?x36) ?x42)))
 (let (($x96 (or (and (distinct ?x43 (_ bv0 256)) true) (and (distinct ?x51 (_ bv0 256)) true))))
 (let (($x9 (bvsmul_noudfl X Y)))
 (let (($x10 (not $x9)))
 (and (distinct $x10 $x96) true)))))))))))))))
(check-sat)
