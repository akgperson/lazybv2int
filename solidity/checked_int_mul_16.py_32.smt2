; benchmark generated from python API
(set-info :status unknown)
(declare-fun Y () (_ BitVec 32))
(declare-fun X () (_ BitVec 32))
(assert
 (let ((?x16 (concat (ite (bvslt Y (_ bv0 32)) (_ bv26959946667150639794667015087019630673637144422540572481103610249215 224) (_ bv0 224)) Y)))
 (let (($x53 (= ?x16 (_ bv0 256))))
 (let ((?x29 (concat (ite (bvslt X (_ bv0 32)) (_ bv26959946667150639794667015087019630673637144422540572481103610249215 224) (_ bv0 224)) X)))
 (let ((?x52 (ite (bvsgt ?x16 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x69 (ite (bvslt ?x29 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x110 (bvand (bvand ?x69 ?x52) (ite (bvslt ?x29 (ite $x53 (_ bv0 256) (bvsdiv (_ bv115792089237316195423570985008687907853269984665640564039457584007910982156288 256) ?x16))) (_ bv1 256) (_ bv0 256)))))
 (let ((?x138 (ite (bvslt ?x16 (ite (= ?x29 (_ bv0 256)) (_ bv0 256) (bvsdiv (_ bv115792089237316195423570985008687907853269984665640564039457584007910982156288 256) ?x29))) (_ bv1 256) (_ bv0 256))))
 (let ((?x62 (ite (bvslt ?x16 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x18 (ite (bvsgt ?x29 (_ bv0 256)) (_ bv1 256) (_ bv0 256))))
 (let ((?x134 (bvand (bvand ?x18 ?x62) ?x138)))
 (let (($x129 (or (and (distinct ?x134 (_ bv0 256)) true) (and (distinct ?x110 (_ bv0 256)) true))))
 (let (($x94 (bvsmul_noudfl X Y)))
 (let (($x96 (not $x94)))
 (and (distinct $x96 $x129) true)))))))))))))))
(check-sat)
