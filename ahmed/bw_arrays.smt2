; z3 -st -t:60000 bw.smt2 tactic.solve_eqs.max_occs=4 tactic.solve_eqs.context_solve=true
; cvc4 bw.smt2

(set-logic QF_AUFBV)
(declare-fun slct_tacS!ce4604a0000000000000000000010000_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacOrigBalance!0_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacOrigBalance!1_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacOrigBalance!2_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacBalance_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-const OK_0_0_0_0_1_0_2_0 Bool)
(declare-const lastMsgSig_1 (_ BitVec 256))
(declare-const certoraTmp_12 Bool)
(declare-const y_0 (_ BitVec 256))
(declare-const certoraTmp_11 Bool)
(declare-const certoraTmp_10 Bool)
(declare-const certoraTmp2_4 Bool)
(declare-const certoraTmp_9 Bool)
(declare-const x_0 (_ BitVec 256))
(declare-const certoraTmp_8 Bool)
(declare-const certoraTmp_7 Bool)
(declare-const certoraTmp2_3 Bool)
(declare-const certoraTmp_6 Bool)
(declare-const t_0 (_ BitVec 256))
(declare-const certoraTmp_5 Bool)
(declare-const certoraTmp_4 Bool)
(declare-const certoraTmp2_2 Bool)
(declare-const certoraTmp_3 Bool)
(declare-const tu_0 (_ BitVec 256))
(declare-const certoraTmp_2 Bool)
(declare-const certoraTmp_1 Bool)
(declare-const certoraTmp2_1 Bool)
(declare-const L1012@1_2 (_ BitVec 256))
(declare-const OK_201_1013_0_0_1_0_7_0 Bool)
(declare-const OK_193_1013_0_0_1_0_6_0 Bool)
(declare-const L1012@1_1 Bool)
(declare-const L1019@1_2 (_ BitVec 256))
(declare-const L1017@1_1 (_ BitVec 256))
(declare-const tacCalldatabuf@1_0 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const L1018@1_1 (_ BitVec 256))
(declare-const L1020@1_2 Bool)
(declare-const L1020@1_1 Bool)
(declare-const L1021@1_1 (_ BitVec 256))
(declare-const tacCalldatasize@1_0 (_ BitVec 256))
(declare-const L1023@1_2 Bool)
(declare-const L1024@1_3 (_ BitVec 256))
(declare-const L1024@1_2 (_ BitVec 256))
(declare-const L1023@1_1 Bool)
(declare-const tacCallvalue@1_0 (_ BitVec 256))
(declare-const tacTmp@1_2 Bool)
(declare-const tacAddress@1_0 (_ BitVec 256))
(declare-const certoraEqParam_3 Bool)
(declare-const certoraParam2_1 (_ BitVec 256))
(declare-const certoraEqParam_2 Bool)
(declare-const certoraParam1_1 (_ BitVec 256))
(declare-const certoraEqParam_1 Bool)
(declare-const certoraParam0_1 (_ BitVec 256))
(declare-const datasizeCheck_1 Bool)
(declare-const certoraIsMethod_1 Bool)
(declare-const certoraInput_2 (_ BitVec 256))
(declare-const certoraInput_1 (_ BitVec 256))
(declare-const tmpLastMsgSig_1 Bool)
(declare-const tacTmp_1 Bool)
(declare-const certoraOutVar0_1 (_ BitVec 256))
(declare-const certoraTmp_13 Bool)
(declare-const L1013@1_4 (_ BitVec 256))
(declare-const OK_234_1013_0_0_1_0_10_0 Bool)
(declare-const L1011@1_2 (_ BitVec 256))
(declare-const L1011@1_4 Bool)
(declare-const L1010@1_2 (_ BitVec 256))
(declare-const OK_7_0_0_0_0_0_0_0 Bool)
(declare-const tacRetval0@1_1 (_ BitVec 256))
(declare-const tacM@1_1 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const tacM@1_0 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const L1013@1_7 (_ BitVec 256))
(declare-const L1014@1_2 Bool)
(declare-const OK_0_0_0_0_2_0_13_0 Bool)
(declare-const lastMsgSig_2 (_ BitVec 256))
(declare-const certoraArg2_2 (_ BitVec 256))
(declare-const certoraArg1_2 (_ BitVec 256))
(declare-const L1012@2_2 (_ BitVec 256))
(declare-const OK_201_1013_0_0_2_0_18_0 Bool)
(declare-const OK_193_1013_0_0_2_0_17_0 Bool)
(declare-const L1012@2_1 Bool)
(declare-const L1019@2_2 (_ BitVec 256))
(declare-const L1017@2_1 (_ BitVec 256))
(declare-const tacCalldatabuf@2_0 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const L1018@2_1 (_ BitVec 256))
(declare-const L1020@2_2 Bool)
(declare-const L1020@2_1 Bool)
(declare-const L1021@2_1 (_ BitVec 256))
(declare-const tacCalldatasize@2_0 (_ BitVec 256))
(declare-const L1023@2_2 Bool)
(declare-const L1024@2_3 (_ BitVec 256))
(declare-const L1024@2_2 (_ BitVec 256))
(declare-const L1023@2_1 Bool)
(declare-const tacCallvalue@2_0 (_ BitVec 256))
(declare-const tacTmp@2_2 Bool)
(declare-const tacAddress@2_0 (_ BitVec 256))
(declare-const certoraEqParam_6 Bool)
(declare-const certoraParam2_2 (_ BitVec 256))
(declare-const certoraEqParam_5 Bool)
(declare-const certoraParam1_2 (_ BitVec 256))
(declare-const certoraEqParam_4 Bool)
(declare-const certoraParam0_2 (_ BitVec 256))
(declare-const datasizeCheck_2 Bool)
(declare-const certoraIsMethod_2 Bool)
(declare-const certoraInput_4 (_ BitVec 256))
(declare-const certoraInput_3 (_ BitVec 256))
(declare-const tmpLastMsgSig_2 Bool)
(declare-const tacTmp_2 Bool)
(declare-const certoraOutVar0_3 (_ BitVec 256))
(declare-const certoraTmp_14 Bool)
(declare-const L1013@2_4 (_ BitVec 256))
(declare-const OK_234_1013_0_0_2_0_21_0 Bool)
(declare-const L1011@2_2 (_ BitVec 256))
(declare-const L1011@2_4 Bool)
(declare-const L1010@2_2 (_ BitVec 256))
(declare-const OK_19_0_0_0_0_0_0_0 Bool)
(declare-const tacRetval0@2_1 (_ BitVec 256))
(declare-const tacM@2_1 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const tacM@2_0 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const L1013@2_7 (_ BitVec 256))
(declare-const L1014@2_2 Bool)
(declare-const OK_0_0_0_0_3_0_24_0 Bool)
(declare-const lastMsgSig_3 (_ BitVec 256))
(declare-const L1012@3_2 (_ BitVec 256))
(declare-const OK_201_1013_0_0_3_0_29_0 Bool)
(declare-const OK_193_1013_0_0_3_0_28_0 Bool)
(declare-const L1012@3_1 Bool)
(declare-const L1019@3_2 (_ BitVec 256))
(declare-const L1017@3_1 (_ BitVec 256))
(declare-const tacCalldatabuf@3_0 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const L1018@3_1 (_ BitVec 256))
(declare-const L1020@3_2 Bool)
(declare-const L1020@3_1 Bool)
(declare-const L1021@3_1 (_ BitVec 256))
(declare-const tacCalldatasize@3_0 (_ BitVec 256))
(declare-const L1023@3_2 Bool)
(declare-const L1024@3_3 (_ BitVec 256))
(declare-const L1024@3_2 (_ BitVec 256))
(declare-const L1023@3_1 Bool)
(declare-const tacCallvalue@3_0 (_ BitVec 256))
(declare-const tacTmp@3_2 Bool)
(declare-const tacAddress@3_0 (_ BitVec 256))
(declare-const certoraEqParam_9 Bool)
(declare-const certoraParam2_3 (_ BitVec 256))
(declare-const certoraEqParam_8 Bool)
(declare-const certoraParam1_3 (_ BitVec 256))
(declare-const certoraEqParam_7 Bool)
(declare-const certoraParam0_3 (_ BitVec 256))
(declare-const datasizeCheck_3 Bool)
(declare-const certoraIsMethod_3 Bool)
(declare-const certoraInput_6 (_ BitVec 256))
(declare-const certoraInput_5 (_ BitVec 256))
(declare-const tmpLastMsgSig_3 Bool)
(declare-const tacTmp_3 Bool)
(declare-const certoraOutVar0_5 (_ BitVec 256))
(declare-const certoraTmp_15 Bool)
(declare-const L1013@3_4 (_ BitVec 256))
(declare-const OK_234_1013_0_0_3_0_32_0 Bool)
(declare-const L1011@3_2 (_ BitVec 256))
(declare-const L1011@3_4 Bool)
(declare-const L1010@3_2 (_ BitVec 256))
(declare-const OK_27_0_0_0_0_0_0_0 Bool)
(declare-const tacRetval0@3_1 (_ BitVec 256))
(declare-const tacM@3_1 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const tacM@3_0 (Array (_ BitVec 256) (_ BitVec 256)))
(declare-const L1013@3_7 (_ BitVec 256))
(declare-const L1014@3_2 Bool)
(declare-const certoraAssert_1_1 Bool)
(declare-const ReachabilityCertora0_0_0_0_0_0_0_0_0 Bool)
(declare-const ReachabilityCertora0_0_0_0_1_0_2_0_0 Bool)
(declare-const ReachabilityCertora201_1013_0_0_1_0_7_0_0 Bool)
(declare-const ReachabilityCertora193_1013_0_0_1_0_6_0_0 Bool)
(declare-const ReachabilityCertora234_1013_0_0_1_0_10_0_0 Bool)
(declare-const ReachabilityCertora7_0_0_0_0_0_0_0_0 Bool)
(declare-const ReachabilityCertora0_0_0_0_2_0_13_0_0 Bool)
(declare-const ReachabilityCertora201_1013_0_0_2_0_18_0_0 Bool)
(declare-const ReachabilityCertora193_1013_0_0_2_0_17_0_0 Bool)
(declare-const ReachabilityCertora234_1013_0_0_2_0_21_0_0 Bool)
(declare-const ReachabilityCertora19_0_0_0_0_0_0_0_0 Bool)
(declare-const ReachabilityCertora0_0_0_0_3_0_24_0_0 Bool)
(declare-const ReachabilityCertora201_1013_0_0_3_0_29_0_0 Bool)
(declare-const ReachabilityCertora193_1013_0_0_3_0_28_0_0 Bool)
(declare-const ReachabilityCertora234_1013_0_0_3_0_32_0_0 Bool)
(declare-const ReachabilityCertora27_0_0_0_0_0_0_0_0 Bool)
(declare-const OK_0_0_0_0_0_0_0_0 Bool)
(declare-fun slct_tacCalldatabuf@1_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacM@1_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacM@1_1 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacCalldatabuf@2_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacM@2_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacM@2_1 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacCalldatabuf@3_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacM@3_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun slct_tacM@3_1 ((_ BitVec 256)) (_ BitVec 256))
(declare-const certoraAndSmallPart11 (_ BitVec 256))
(declare-const certoraAndSmallPart22 (_ BitVec 256))
(declare-const certoraAndSmallPart33 (_ BitVec 256))
(declare-const certoraAndSmallPart44 (_ BitVec 256))
(declare-const certoraAndSmallPart55 (_ BitVec 256))
(declare-const certoraAndSmallPart66 (_ BitVec 256))
(set-option :produce-models true)
(define-fun uninterp_mod_256 ((t!0 (_ BitVec 256))) (_ BitVec 256) (bvurem t!0  #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))
(define-fun bvult256 ((t!0 (_ BitVec 256))) Bool (or (bvult t!0 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) (= t!0 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)))
(define-fun bvuge_shelly ((t!0 (_ BitVec 256)) (t!1 (_ BitVec 256))) Bool (or (bvugt t!0 t!1) (= t!0 t!1)))
(define-fun bvule_shelly ((t!0 (_ BitVec 256)) (t!1 (_ BitVec 256))) Bool (or (bvult t!0 t!1) (= t!0 t!1)))
(define-fun bvsub_shelly ((t!0 (_ BitVec 256)) (t!1 (_ BitVec 256))) (_ BitVec 256) (bvadd t!0 (bvneg t!1)))
(assert (= ReachabilityCertora0_0_0_0_0_0_0_0_0 true))
(assert (= ReachabilityCertora0_0_0_0_1_0_2_0_0 ReachabilityCertora0_0_0_0_0_0_0_0_0))
(assert (= ReachabilityCertora201_1013_0_0_1_0_7_0_0 (and ReachabilityCertora0_0_0_0_1_0_2_0_0 (not (= L1012@1_2 #x0000000000000000000000000000000000000000000000000000000000000000)))))
(assert (= ReachabilityCertora193_1013_0_0_1_0_6_0_0 (and ReachabilityCertora0_0_0_0_1_0_2_0_0 (not (not (= L1012@1_2 #x0000000000000000000000000000000000000000000000000000000000000000))))))
(assert (= ReachabilityCertora234_1013_0_0_1_0_10_0_0 (or ReachabilityCertora193_1013_0_0_1_0_6_0_0 ReachabilityCertora201_1013_0_0_1_0_7_0_0)))
(assert (= ReachabilityCertora7_0_0_0_0_0_0_0_0 ReachabilityCertora234_1013_0_0_1_0_10_0_0))
(assert (= ReachabilityCertora0_0_0_0_2_0_13_0_0 ReachabilityCertora7_0_0_0_0_0_0_0_0))
(assert (= ReachabilityCertora201_1013_0_0_2_0_18_0_0 (and ReachabilityCertora0_0_0_0_2_0_13_0_0 (not (= L1012@2_2 #x0000000000000000000000000000000000000000000000000000000000000000)))))
(assert (= ReachabilityCertora193_1013_0_0_2_0_17_0_0 (and ReachabilityCertora0_0_0_0_2_0_13_0_0 (not (not (= L1012@2_2 #x0000000000000000000000000000000000000000000000000000000000000000))))))
(assert (= ReachabilityCertora234_1013_0_0_2_0_21_0_0 (or ReachabilityCertora193_1013_0_0_2_0_17_0_0 ReachabilityCertora201_1013_0_0_2_0_18_0_0)))
(assert (= ReachabilityCertora19_0_0_0_0_0_0_0_0 ReachabilityCertora234_1013_0_0_2_0_21_0_0))
(assert (= ReachabilityCertora0_0_0_0_3_0_24_0_0 ReachabilityCertora19_0_0_0_0_0_0_0_0))
(assert (= ReachabilityCertora201_1013_0_0_3_0_29_0_0 (and ReachabilityCertora0_0_0_0_3_0_24_0_0 (not (= L1012@3_2 #x0000000000000000000000000000000000000000000000000000000000000000)))))
(assert (= ReachabilityCertora193_1013_0_0_3_0_28_0_0 (and ReachabilityCertora0_0_0_0_3_0_24_0_0 (not (not (= L1012@3_2 #x0000000000000000000000000000000000000000000000000000000000000000))))))
(assert (= ReachabilityCertora234_1013_0_0_3_0_32_0_0 (or ReachabilityCertora193_1013_0_0_3_0_28_0_0 ReachabilityCertora201_1013_0_0_3_0_29_0_0)))
(assert (= ReachabilityCertora27_0_0_0_0_0_0_0_0 ReachabilityCertora234_1013_0_0_3_0_32_0_0))
(assert (= OK_0_0_0_0_0_0_0_0 (=> (= certoraTmp_1 (bvult #x0000000000000000000000000000000000000000000000000000000000000000 tu_0)) (=> (= certoraTmp2_1 (= #x0000000000000000000000000000000000000000000000000000000000000000 tu_0)) (=> (= certoraTmp_2 (or certoraTmp_1 certoraTmp2_1)) (=> certoraTmp_2 (=> (= certoraTmp_3 (bvule_shelly tu_0 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> certoraTmp_3 (=> (= certoraTmp_4 (bvult #x0000000000000000000000000000000000000000000000000000000000000000 t_0)) (=> (= certoraTmp2_2 (= #x0000000000000000000000000000000000000000000000000000000000000000 t_0)) (=> (= certoraTmp_5 (or certoraTmp_4 certoraTmp2_2)) (=> certoraTmp_5 (=> (= certoraTmp_6 (bvule_shelly t_0 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> certoraTmp_6 (=> (= certoraTmp_7 (bvult #x0000000000000000000000000000000000000000000000000000000000000000 x_0)) (=> (= certoraTmp2_3 (= #x0000000000000000000000000000000000000000000000000000000000000000 x_0)) (=> (= certoraTmp_8 (or certoraTmp_7 certoraTmp2_3)) (=> certoraTmp_8 (=> (= certoraTmp_9 (bvule_shelly x_0 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> certoraTmp_9 (=> (= certoraTmp_10 (bvult #x0000000000000000000000000000000000000000000000000000000000000000 y_0)) (=> (= certoraTmp2_4 (= #x0000000000000000000000000000000000000000000000000000000000000000 y_0)) (=> (= certoraTmp_11 (or certoraTmp_10 certoraTmp2_4)) (=> certoraTmp_11 (=> (= certoraTmp_12 (bvule_shelly y_0 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> certoraTmp_12 (=> (and (bvuge_shelly lastMsgSig_1 #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly lastMsgSig_1 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) OK_0_0_0_0_1_0_2_0)))))))))))))))))))))))))))
(assert (= OK_0_0_0_0_1_0_2_0 (=> (= certoraTmp_13 (= tacCallvalue@1_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> certoraTmp_13 (=> (and (bvuge_shelly certoraOutVar0_1 #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly certoraOutVar0_1 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> (= tacTmp_1 (and (= (bvult tacCalldatasize@1_0 #x8000000000000000000000000000000000000000000000000000000000000000) true) (bvugt tacCalldatasize@1_0 #x0000000000000000000000000000000000000000000000000000000000000063))) (=> tacTmp_1 (=> (= certoraInput_1 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= tmpLastMsgSig_1 (= lastMsgSig_1 certoraInput_1)) (=> tmpLastMsgSig_1 (=> (= certoraInput_2 (bvlshr certoraInput_1 #x00000000000000000000000000000000000000000000000000000000000000e0)) (=> (= certoraIsMethod_1 (= certoraInput_2 #x000000000000000000000000000000000000000000000000000000000b94e4f7)) (=> certoraIsMethod_1 (=> (= datasizeCheck_1 (bvult tacCalldatasize@1_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (not datasizeCheck_1) (=> (= certoraParam0_1 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (= certoraEqParam_1 (= certoraParam0_1 y_0)) (=> certoraEqParam_1 (=> (= certoraParam1_1 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000024)) (=> (= certoraEqParam_2 (= certoraParam1_1 tu_0)) (=> certoraEqParam_2 (=> (= certoraParam2_1 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000044)) (=> (= certoraEqParam_3 (= certoraParam2_1 t_0)) (=> certoraEqParam_3 (=> (= tacTmp@1_2 (= tacAddress@1_0 #x00000000000000000000000000000000ce4604a0000000000000000000010000)) (=> tacTmp@1_2 (=> (= L1023@1_1 (= tacCallvalue@1_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> L1023@1_1 (=> (= L1024@1_2 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1024@1_3 (bvlshr L1024@1_2 #x00000000000000000000000000000000000000000000000000000000000000e0)) (=> (= L1023@1_2 (= #x000000000000000000000000000000000000000000000000000000000b94e4f7 L1024@1_3)) (=> L1023@1_2 (=> (= L1021@1_1 (uninterp_mod_256 (bvsub_shelly tacCalldatasize@1_0 #x0000000000000000000000000000000000000000000000000000000000000004))) (=> (= L1020@1_1 (bvult L1021@1_1 #x0000000000000000000000000000000000000000000000000000000000000060)) (=> (= L1020@1_2 (= L1020@1_1 (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000)))) (=> L1020@1_2 (=> (= L1019@1_2 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (= L1018@1_1 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000024)) (=> (= L1017@1_1 (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000044)) (=> (= L1012@1_1 (= L1019@1_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= (not (= L1012@1_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (= L1012@1_1 (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000)))) (and (=> (not (= L1012@1_2 #x0000000000000000000000000000000000000000000000000000000000000000)) OK_201_1013_0_0_1_0_7_0) (=> (not (not (= L1012@1_2 #x0000000000000000000000000000000000000000000000000000000000000000))) OK_193_1013_0_0_1_0_6_0)))))))))))))))))))))))))))))))))))))))))))
(assert (= OK_193_1013_0_0_1_0_6_0 (=> (= L1013@1_4 #x0000000000000000000000000000000000000000000000000000000000000000) OK_234_1013_0_0_1_0_10_0)))
(assert (= OK_201_1013_0_0_1_0_7_0 (=> (= L1011@1_2 (uninterp_mod_256 (bvmul L1019@1_2 L1018@1_1))) (=> (not (= L1019@1_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1010@1_2 (bvudiv L1011@1_2 L1019@1_2)) (=> (= L1011@1_4 (= L1010@1_2 L1018@1_1)) (=> L1011@1_4 (=> (= L1013@1_4 L1011@1_2) OK_234_1013_0_0_1_0_10_0))))))))
(assert (= OK_234_1013_0_0_1_0_10_0 (=> (= L1014@1_2 (bvugt L1017@1_1 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> L1014@1_2 (=> (not (= L1017@1_1 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1013@1_7 (bvudiv L1013@1_4 L1017@1_1)) (=> (= tacRetval0@1_1 L1013@1_7) OK_7_0_0_0_0_0_0_0)))))))
(assert (= OK_7_0_0_0_0_0_0_0 (=> (not (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000))) (=> (not (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000))) (=> (= certoraArg1_2 (bvsub_shelly tu_0 tacRetval0@1_1)) (=> (= certoraArg2_2 (bvsub_shelly t_0 y_0)) (=> (and (bvuge_shelly lastMsgSig_2 #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly lastMsgSig_2 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) OK_0_0_0_0_2_0_13_0)))))))
(assert (= OK_0_0_0_0_2_0_13_0 (=> (= certoraTmp_14 (= tacCallvalue@2_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> certoraTmp_14 (=> (and (bvuge_shelly certoraOutVar0_3 #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly certoraOutVar0_3 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> (= tacTmp_2 (and (= (bvult tacCalldatasize@2_0 #x8000000000000000000000000000000000000000000000000000000000000000) true) (bvugt tacCalldatasize@2_0 #x0000000000000000000000000000000000000000000000000000000000000063))) (=> tacTmp_2 (=> (= certoraInput_3 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= tmpLastMsgSig_2 (= lastMsgSig_2 certoraInput_3)) (=> tmpLastMsgSig_2 (=> (= certoraInput_4 (bvlshr certoraInput_3 #x00000000000000000000000000000000000000000000000000000000000000e0)) (=> (= certoraIsMethod_2 (= certoraInput_4 #x000000000000000000000000000000000000000000000000000000000b94e4f7)) (=> certoraIsMethod_2 (=> (= datasizeCheck_2 (bvult tacCalldatasize@2_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (not datasizeCheck_2) (=> (= certoraParam0_2 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (= certoraEqParam_4 (= certoraParam0_2 x_0)) (=> certoraEqParam_4 (=> (= certoraParam1_2 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000024)) (=> (= certoraEqParam_5 (= certoraParam1_2 certoraArg1_2)) (=> certoraEqParam_5 (=> (= certoraParam2_2 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000044)) (=> (= certoraEqParam_6 (= certoraParam2_2 certoraArg2_2)) (=> certoraEqParam_6 (=> (= tacTmp@2_2 (= tacAddress@2_0 #x00000000000000000000000000000000ce4604a0000000000000000000010000)) (=> tacTmp@2_2 (=> (= L1023@2_1 (= tacCallvalue@2_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> L1023@2_1 (=> (= L1024@2_2 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1024@2_3 (bvlshr L1024@2_2 #x00000000000000000000000000000000000000000000000000000000000000e0)) (=> (= L1023@2_2 (= #x000000000000000000000000000000000000000000000000000000000b94e4f7 L1024@2_3)) (=> L1023@2_2 (=> (= L1021@2_1 (uninterp_mod_256 (bvsub_shelly tacCalldatasize@2_0 #x0000000000000000000000000000000000000000000000000000000000000004))) (=> (= L1020@2_1 (bvult L1021@2_1 #x0000000000000000000000000000000000000000000000000000000000000060)) (=> (= L1020@2_2 (= L1020@2_1 (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000)))) (=> L1020@2_2 (=> (= L1019@2_2 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (= L1018@2_1 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000024)) (=> (= L1017@2_1 (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000044)) (=> (= L1012@2_1 (= L1019@2_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= (not (= L1012@2_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (= L1012@2_1 (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000)))) (and (=> (not (= L1012@2_2 #x0000000000000000000000000000000000000000000000000000000000000000)) OK_201_1013_0_0_2_0_18_0) (=> (not (not (= L1012@2_2 #x0000000000000000000000000000000000000000000000000000000000000000))) OK_193_1013_0_0_2_0_17_0)))))))))))))))))))))))))))))))))))))))))))
(assert (= OK_193_1013_0_0_2_0_17_0 (=> (= L1013@2_4 #x0000000000000000000000000000000000000000000000000000000000000000) OK_234_1013_0_0_2_0_21_0)))
(assert (= OK_201_1013_0_0_2_0_18_0 (=> (= L1011@2_2 (uninterp_mod_256 (bvmul L1019@2_2 L1018@2_1))) (=> (not (= L1019@2_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1010@2_2 (bvudiv L1011@2_2 L1019@2_2)) (=> (= L1011@2_4 (= L1010@2_2 L1018@2_1)) (=> L1011@2_4 (=> (= L1013@2_4 L1011@2_2) OK_234_1013_0_0_2_0_21_0))))))))
(assert (= OK_234_1013_0_0_2_0_21_0 (=> (= L1014@2_2 (bvugt L1017@2_1 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> L1014@2_2 (=> (not (= L1017@2_1 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1013@2_7 (bvudiv L1013@2_4 L1017@2_1)) (=> (= tacRetval0@2_1 L1013@2_7) OK_19_0_0_0_0_0_0_0)))))))
(assert (= OK_19_0_0_0_0_0_0_0 (=> (not (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000))) (=> (not (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000))) (=> (and (bvuge_shelly lastMsgSig_3 #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly lastMsgSig_3 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) OK_0_0_0_0_3_0_24_0)))))
(assert (= OK_0_0_0_0_3_0_24_0 (=> (= certoraTmp_15 (= tacCallvalue@3_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> certoraTmp_15 (=> (and (bvuge_shelly certoraOutVar0_5 #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly certoraOutVar0_5 #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) (=> (= tacTmp_3 (and (= (bvult tacCalldatasize@3_0 #x8000000000000000000000000000000000000000000000000000000000000000) true) (bvugt tacCalldatasize@3_0 #x0000000000000000000000000000000000000000000000000000000000000063))) (=> tacTmp_3 (=> (= certoraInput_5 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= tmpLastMsgSig_3 (= lastMsgSig_3 certoraInput_5)) (=> tmpLastMsgSig_3 (=> (= certoraInput_6 (bvlshr certoraInput_5 #x00000000000000000000000000000000000000000000000000000000000000e0)) (=> (= certoraIsMethod_3 (= certoraInput_6 #x000000000000000000000000000000000000000000000000000000000b94e4f7)) (=> certoraIsMethod_3 (=> (= datasizeCheck_3 (bvult tacCalldatasize@3_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (not datasizeCheck_3) (=> (= certoraParam0_3 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (= certoraEqParam_7 (= certoraParam0_3 x_0)) (=> certoraEqParam_7 (=> (= certoraParam1_3 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000024)) (=> (= certoraEqParam_8 (= certoraParam1_3 tu_0)) (=> certoraEqParam_8 (=> (= certoraParam2_3 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000044)) (=> (= certoraEqParam_9 (= certoraParam2_3 t_0)) (=> certoraEqParam_9 (=> (= tacTmp@3_2 (= tacAddress@3_0 #x00000000000000000000000000000000ce4604a0000000000000000000010000)) (=> tacTmp@3_2 (=> (= L1023@3_1 (= tacCallvalue@3_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> L1023@3_1 (=> (= L1024@3_2 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1024@3_3 (bvlshr L1024@3_2 #x00000000000000000000000000000000000000000000000000000000000000e0)) (=> (= L1023@3_2 (= #x000000000000000000000000000000000000000000000000000000000b94e4f7 L1024@3_3)) (=> L1023@3_2 (=> (= L1021@3_1 (uninterp_mod_256 (bvsub_shelly tacCalldatasize@3_0 #x0000000000000000000000000000000000000000000000000000000000000004))) (=> (= L1020@3_1 (bvult L1021@3_1 #x0000000000000000000000000000000000000000000000000000000000000060)) (=> (= L1020@3_2 (= L1020@3_1 (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000)))) (=> L1020@3_2 (=> (= L1019@3_2 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000004)) (=> (= L1018@3_1 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000024)) (=> (= L1017@3_1 (slct_tacCalldatabuf@3_0 #x0000000000000000000000000000000000000000000000000000000000000044)) (=> (= L1012@3_1 (= L1019@3_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= (not (= L1012@3_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (= L1012@3_1 (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000)))) (and (=> (not (= L1012@3_2 #x0000000000000000000000000000000000000000000000000000000000000000)) OK_201_1013_0_0_3_0_29_0) (=> (not (not (= L1012@3_2 #x0000000000000000000000000000000000000000000000000000000000000000))) OK_193_1013_0_0_3_0_28_0)))))))))))))))))))))))))))))))))))))))))))
(assert (= OK_193_1013_0_0_3_0_28_0 (=> (= L1013@3_4 #x0000000000000000000000000000000000000000000000000000000000000000) OK_234_1013_0_0_3_0_32_0)))
(assert (= OK_201_1013_0_0_3_0_29_0 (=> (= L1011@3_2 (uninterp_mod_256 (bvmul L1019@3_2 L1018@3_1))) (=> (not (= L1019@3_2 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1010@3_2 (bvudiv L1011@3_2 L1019@3_2)) (=> (= L1011@3_4 (= L1010@3_2 L1018@3_1)) (=> L1011@3_4 (=> (= L1013@3_4 L1011@3_2) OK_234_1013_0_0_3_0_32_0))))))))
(assert (= OK_234_1013_0_0_3_0_32_0 (=> (= L1014@3_2 (bvugt L1017@3_1 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> L1014@3_2 (=> (not (= L1017@3_1 #x0000000000000000000000000000000000000000000000000000000000000000)) (=> (= L1013@3_7 (bvudiv L1013@3_4 L1017@3_1)) (=> (= tacRetval0@3_1 L1013@3_7) OK_27_0_0_0_0_0_0_0)))))))
(assert (= OK_27_0_0_0_0_0_0_0 (=> (not (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000))) (=> (not (not (= #x0000000000000000000000000000000000000000000000000000000000000000 #x0000000000000000000000000000000000000000000000000000000000000000))) (=> (= certoraAssert_1_1 (= tacRetval0@2_1 tacRetval0@3_1)) certoraAssert_1_1)))))
(assert (not OK_0_0_0_0_0_0_0_0))
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000000) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000000) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000004) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000004) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000024) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000024) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000044) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@1_0 #x0000000000000000000000000000000000000000000000000000000000000044) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert (= (slct_tacM@1_1 #x0000000000000000000000000000000000000000000000000000000000000080) L1013@1_7)); array def axiom
(assert (= (slct_tacM@1_0 #x0000000000000000000000000000000000000000000000000000000000000080) #x0000000000000000000000000000000000000000000000000000000000000000)); array def axiom
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000000) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000000) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000004) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000004) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000024) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000024) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert true); array def axiom
(assert (and (bvuge_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000044) #x0000000000000000000000000000000000000000000000000000000000000000) (bvule_shelly (slct_tacCalldatabuf@2_0 #x0000000000000000000000000000000000000000000000000000000000000044) #xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))); array select bounds
(assert (= (slct_tacM@2_1 #x0000000000000000000000000000000000000000000000000000000000000080) L1013@2_7)); array def axiom
(assert (= (slct_tacM@2_0 #x0000000000000000000000000000000000000000000000000000000000000080) #x0000000000000000000000000000000000000000000000000000000000000000)); array def axiom
(assert true); array def axiom
(assert true); array def axiom
(assert true); array def axiom
(assert true); array def axiom
(assert (= (slct_tacM@3_1 #x0000000000000000000000000000000000000000000000000000000000000080) L1013@3_7)); array def axiom
(assert (= (slct_tacM@3_0 #x0000000000000000000000000000000000000000000000000000000000000080) #x0000000000000000000000000000000000000000000000000000000000000000)); array def axiom

(check-sat)
(get-model)
